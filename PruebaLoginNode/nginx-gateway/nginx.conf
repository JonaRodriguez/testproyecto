events {
    # The events block is required but can be left empty for basic configurations.
    # It usually contains directives that affect the connection handling.
}

http {
    # The http block includes settings for handling HTTP traffic.

    include       mime.types;
    # Specifies the file that defines MIME types for various file extensions.

    default_type  application/octet-stream;
    # Sets the default MIME type for files when the type is not determined.

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    # Defines a custom log format called 'main' for access logs.

    access_log  /var/log/nginx/access.log  main;
    # Specifies the file and format for access logs.

    error_log   /var/log/nginx/error.log warn;
    # Specifies the file and log level for error logs.

    sendfile        on;
    # Enables the use of sendfile for efficient file transfer.

    keepalive_timeout  65;
    # Sets the timeout for persistent connections with the client.

    # Define upstream groups for the services

    upstream user_service {
        server user-service:4001;
        # The User Service is running locally on port 4001.
    }

    upstream product_service {
        server product-service:4002;
        # The Product Service is running locally on port 4002.
    }

    upstream order_service {
        server order-service:4003;
        # The Order Service is running locally on port 4003.
    }

    server {
        listen 4004;
        # The server listens on port 4050.

        server_name localhost;
        # The server_name directive specifies the domain name for this server.

        # Proxy for User Service
        location /users {
            proxy_pass http://user_service/users;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy for Product Service
        location /products {
            proxy_pass http://product_service/products;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy for Order Service
        location /orders {
            proxy_pass http://order_service/orders;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Handle unknown requests
        location / {
            return 404;
        }
    }
}
